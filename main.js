(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a){var s=a.templateSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._cardId=e._id,this._likes=e.likes,this._userId=n,this._isRemovable=this._userId===e.owner._id,this._handleCardClick=r,this._handleButtonRemove=o,this._handleButtonLike=i.bind(this),this._templateSelector=s}var n,r;return n=t,(r=[{key:"_updateLikes",value:function(){this._isLiked=this._likes.map((function(e){return e._id})).includes(this._userId),this._isLiked?this._buttonLike.classList.add("elements__button-like_active"):this._buttonLike.classList.remove("elements__button-like_active"),this._likeCounter.textContent=this._likes.length}},{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.firstElementChild.cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this._buttonLike.addEventListener("click",(function(){return e._handleButtonLike(e._cardId,e._isLiked)})),this._buttonRemove&&this._buttonRemove.addEventListener("click",(function(){return e._handleButtonRemove(e._cardId)})),this._cardImage.addEventListener("click",(function(){return e._handleCardClick(e._name,e._link)}))}},{key:"setLikes",value:function(e){this._likes=e,this._updateLikes()}},{key:"createNewCard",value:function(){return this._newCard=this._getTemplate(),this._cardImage=this._newCard.querySelector(".elements__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._newCard.querySelector(".elements__title").textContent=this._name,this._buttonLike=this._newCard.querySelector(".elements__button-like"),this._likeCounter=this._newCard.querySelector(".elements__like-counter"),this._updateLikes(),this._buttonRemove=this._newCard.querySelector(".elements__remove"),this._isRemovable||this._buttonRemove.remove(),this._setEventListeners(),this._newCard}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._settingsForm=t,this._form=n,this._buttonElement=n.querySelector(t.submitButtonSelector),this._inputList=Array.from(n.querySelectorAll(t.inputSelector))}var t,r;return t=e,(r=[{key:"_handleFormSubmit",value:function(e){e.preventDefault()}},{key:"_toggleButtonState",value:function(){this._form.checkValidity()?(this._buttonElement.classList.remove(this._settingsForm.inactiveButtonClass),this._buttonElement.removeAttribute("disabled")):(this._buttonElement.classList.add(this._settingsForm.inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0))}},{key:"_showInputError",value:function(e){this._errorElement=this._form.querySelector(".".concat(e.id,"-error")),e.classList.add(this._settingsForm.inputErrorClass),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._settingsForm.errorClass)}},{key:"_hideInputError",value:function(e){this._errorElement=this._form.querySelector(".".concat(e.id,"-error")),e.classList.remove(this._settingsForm.inputErrorClass),this._errorElement.classList.remove(this._settingsForm.errorClass),this._errorElement.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))})),this._form.addEventListener("submit",(function(t){return e._handleFormSubmit(t)}))}},{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){return e._hideInputError(t)}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._itemsArray=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(){var e=this;this._itemsArray.forEach((function(t){return e._renderer(t)}))}},{key:"updateSection",value:function(e){this._itemsArray=e,Array.from(this._container.children).forEach((function(e){return e.remove()})),this.renderItems()}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._buttonClose=this._popup.querySelector(".popup__close"),this._handleEscClose=this._handleEscClose.bind(this),this._handleOverlayClose=this._handleOverlayClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&(e.preventDefault(),this.close())}},{key:"_handleOverlayClose",value:function(e){e.target.classList.contains("popup")&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._buttonClose.addEventListener("click",(function(){e.close()}))}},{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.addEventListener("mousedown",this._handleOverlayClose),this._popup.classList.add("popup_opened")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.removeEventListener("mousedown",this._handleOverlayClose),this._popup.classList.remove("popup_opened")}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=f(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},l.apply(this,arguments)}function f(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}function p(e,t){return p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},p(e,t)}function h(e,t){if(t&&("object"===u(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&p(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return h(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handlerFormSubmit=t,n._form=n._popup.querySelector(".popup__form"),n._inputList=n._form.querySelectorAll(".popup__input"),n._buttonSubmit=n._popup.querySelector(".popup__save"),n.inputValuesObj={},n}return t=a,(n=[{key:"showLoading",value:function(e){this._buttonSubmit.textContent=e}},{key:"_getInputValues",value:function(){var e=this;this._inputList.forEach((function(t){e.inputValuesObj[t.name]=t.value}))}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"setEventListeners",value:function(){var e=this;l(d(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){e._getInputValues(),e._handlerFormSubmit(t)}))}},{key:"close",value:function(){l(d(a.prototype),"close",this).call(this),this._form.reset()}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=b(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},m.apply(this,arguments)}function b(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}function k(e,t){return k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},k(e,t)}function w(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._showCardImage=t._popup.querySelector(".popup__image"),t._showCardCaption=t._popup.querySelector(".popup__caption"),t}return t=a,(n=[{key:"open",value:function(e,t){this._showCardImage.src=t,this._showCardImage.alt=e,this._showCardCaption.textContent=e,m(g(a.prototype),"open",this).call(this)}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=O(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function O(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}function j(e,t){return j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},j(e,t)}function P(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handlerFormSubmit=t,n._form=n._popup.querySelector(".popup__form"),n._buttonSubmit=n._popup.querySelector(".popup__save"),n}return t=a,(n=[{key:"open",value:function(e){this._dataToSend=e,L(I(a.prototype),"open",this).call(this)}},{key:"getDataToSend",value:function(){return this._dataToSend}},{key:"setEventListeners",value:function(){var e=this;L(I(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){return e._handlerFormSubmit(t)}))}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var U=function(){function e(t){var n=t.userNameSelector,r=t.userJobSelector,o=t.userAvatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(n),this._userJob=document.querySelector(r),this._userAvatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"setUserInfo",value:function(e){var t=e.profileName,n=e.profileJob;this._userName.textContent=t,this._userJob.textContent=n}},{key:"getUserInfo",value:function(){return{profileName:this._userName.textContent,profileJob:this._userJob.textContent}}},{key:"setUserAvatar",value:function(e){this._userAvatar.src=e}},{key:"setUserId",value:function(e){this._userId=e}},{key:"getUserId",value:function(){return this._userId}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var q=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._checkResponse)}},{key:"patchUserInfo",value:function(e){var t=e.profileName,n=e.profileJob;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then(this._checkResponse)}},{key:"patchUserAvatar",value:function(e){var t=e.avatarLink;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._checkResponse)}},{key:"postNewCard",value:function(e){var t=e.cardName,n=e.cardLink;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:n})}).then(this._checkResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),B={inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_inactive",inputErrorClass:"popup__input_status_error",errorClass:"popup__input-error_active"},N={userNameSelector:".profile__name",userJobSelector:".profile__description",userAvatarSelector:".profile__avatar",cardListSelector:".elements__list",templateSelector:".template-elements",popupEditProfile:".popup_type_edit-profile",popupUpdateAvatar:".popup_type_update-avatar",popupAddCard:".popup_type_add-card",popupShowCard:".popup_type_show-card",popupConfirm:".popup_type_confirm"},V={editProfileButton:document.querySelector(".profile__edit-button"),addCardButton:document.querySelector(".profile__add-button"),editAvatarButton:document.querySelector(".profile__avatar-button")},x=Array.from(document.forms);function D(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var F={},J=new q({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-41",headers:{authorization:"b1568769-e5c9-45d8-96dd-c3a661412496","Content-Type":"application/json"}}),H=new y(N.popupEditProfile,(function(e){e.preventDefault(),H.showLoading("Сохранение..."),J.patchUserInfo(this.inputValuesObj).then(Q).catch((function(e){return alert(e)})).finally((function(){H.close(),H.showLoading("Сохранить")}))}));H.setEventListeners();var M=new y(N.popupAddCard,(function(e){e.preventDefault(),M.showLoading("Создание..."),J.postNewCard(this.inputValuesObj).then((function(){return J.getInitialCards()})).then((function(e){return F.updateSection(e.reverse())})).catch((function(e){return alert(e)})).finally((function(){M.close(),M.showLoading("Создать")}))}));M.setEventListeners();var z=new y(N.popupUpdateAvatar,(function(e){e.preventDefault(),z.showLoading("Сохранение..."),J.patchUserAvatar(this.inputValuesObj).then((function(e){return K.setUserAvatar(e.avatar)})).catch((function(e){return alert(e)})).finally((function(){z.close(),z.showLoading("Сохранить")}))}));z.setEventListeners();var $=new E(N.popupShowCard);$.setEventListeners();var G=new R(N.popupConfirm,(function(e){e.preventDefault(),G.showLoading("Удаление..."),J.deleteCard(G.getDataToSend()).then((function(){return J.getInitialCards()})).then((function(e){return F.updateSection(e.reverse())})).catch((function(e){return alert(e)})).finally((function(){G.close(),G.showLoading("Да")}))}));G.setEventListeners(),G.showLoading=H.showLoading;var K=new U(N);function Q(e){K.setUserInfo({profileName:e.name,profileJob:e.about})}function W(e,t){var n=this;(t?J.deleteLike(e):J.addLike(e)).then((function(e){return n.setLikes(e.likes)})).catch((function(e){return alert(e)}))}Promise.all([J.getUserInfo(),J.getInitialCards()]).then((function(e){var n,o,a=(o=2,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,s=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){s=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(s)throw o}}return i}}(n,o)||function(e,t){if(e){if("string"==typeof e)return D(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?D(e,t):void 0}}(n,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),s=a[0],u=a[1];Q(s),K.setUserAvatar(s.avatar),K.setUserId(s._id),function(e){(F=new i({items:e.reverse(),renderer:function(e){var n=new t(e,K.getUserId(),$.open.bind($),G.open.bind(G),W,N);F.addItem(n.createNewCard())}},N.cardListSelector)).renderItems()}(u);var c={};x.forEach((function(e){var t=new r(B,e);t.enableValidation(),c[e.name]=t})),V.editProfileButton.addEventListener("click",(function(){H.setInputValues(K.getUserInfo()),c.formEditProfile.resetValidation(),H.open()})),V.addCardButton.addEventListener("click",(function(){c.formAddCard.resetValidation(),M.open()})),V.editAvatarButton.addEventListener("click",(function(){c.formUpdAvatar.resetValidation(),z.open()}))})).catch((function(e){return alert(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,